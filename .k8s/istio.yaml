apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: gateway
spec:
  selector:
    istio: ingress
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: gateway
spec:
  hosts:
    - "affiliate.test"
    - "*.affiliate.test"
  gateways:
    - gateway
    - mesh
  http:
    # Order is important!
    # 1. Forward to gateway (krakenD) if route is */api
    # - name: api
    #   match:
    #     - uri:
    #         prefix: /api
    #   route:
    #     - destination:
    #         host: gateway
    #         port:
    #           number: 8080
    - name: fe-user
      match:
        - authority:
            prefix: user.
      route:
        - destination:
            host: fe-user
            port:
              number: 5000
    # By default Forward to main
    - name: fe-admin
      route:
        - destination:
            host: fe-admin
            port:
              number: 5000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        rewrite name regex .*\.test istio-ingress.istio-ingress.svc.cluster.local answer auto
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }